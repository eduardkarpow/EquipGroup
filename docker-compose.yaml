version: '3.8'

services:
  # Сервис PHP (Ваше Laravel-приложение)
  app:
    build:
      context: . # Указывает Docker, где искать Dockerfile (в текущей директории)
      dockerfile: Dockerfile # Имя Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    # Монтирование томов для разработки:
    # - Заменяет код в контейнере кодом с хоста (удобно при разработке)
    # - /var/www/html/.env заменяет .env из контейнера на .env с хоста
    ports: 
      - '8000:8000'
    volumes:
      - .:/var/www/html
      # - /var/www/html/node_modules # Если вы не хотите, чтобы node_modules с хоста перезаписывались
    # Открытые порты для PHP-FPM (используется для соединения с внешним веб-сервером или прямого тестирования)
    expose:
      - '9000'
    environment:
      # Переменные окружения, которые будут доступны в контейнере
      # Laravel обычно читает их из .env файла, но для Docker Compose можно переопределить
      DB_CONNECTION: mysql # Теперь mysql
      DB_HOST: db
      DB_PORT: 3306 # Порт MySQL
      DB_DATABASE: equipgroup
      DB_USERNAME: user
      DB_PASSWORD: password
      APP_DEBUG: ${APP_DEBUG:-true} # Использует переменную окружения хоста или true по умолчанию
      APP_ENV: ${APP_ENV:-local}
      APP_URL: http://localhost:8000 # Укажите здесь URL, по которому будет доступен ваш фронтенд, если он делает запросы к бэкенду
    # Связь с другими сервисами
    depends_on:
      db:
        condition: service_healthy

  # Сервис Базы данных (MySQL)
  db:
    image: mysql:8.0 # Используем MySQL
    container_name: laravel_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: equipgroup
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root # Пароль для root пользователя MySQL
    volumes:
      - dbdata:/var/lib/mysql # Монтируем том для сохранения данных БД
    ports:
      - '3306:3306' # Опционально, чтобы получить доступ к БД с хоста
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 5s
      timeout: 20s
      retries: 10
      start_period: 30s

# Объявление сетей
networks:
  app-network:
    driver: bridge

# Объявление именованных томов для сохранения данных
volumes:
  dbdata: # Том для данных базы данных